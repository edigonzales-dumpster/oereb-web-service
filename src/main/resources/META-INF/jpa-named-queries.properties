Egrid.findByNumberAndIdentdn=\
SELECT \
	egris_egrid AS egrid, \
	CASE \
		WHEN egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE egris_egrid \
	END AS egrid, \
	nbident as identdn, \
	nummer as number \
FROM \
	av_avdpool_ng.liegenschaften_grundstueck \
WHERE \
	nummer = :number \
	AND nbident = :identdn \
; 
Egrid.findByXY=\
SELECT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS number \
FROM \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	ST_Intersects(:point, geometrie) \
;
Egrid.findByGNSS=\
SELECT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS number \
FROM \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	ST_Intersects(ST_Transform(:point, 2056), geometrie) \
;
Egrid.getEgridByPostalcodeAndLocalisationAndHousingNumber=\
SELECT DISTINCT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS "number" \
FROM \
	( \
		SELECT \
			t_id, \
			gebaeudeeingang_von, \
			hausnummer, \
			lage \
		FROM	 \
			av_avdpool_ng.gebaeudeadressen_gebaeudeeingang \
		WHERE \
			hausnummer IS NOT NULL \
			AND \
			istoffiziellebezeichnung = 'ja' \
	) AS gebein \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisation AS lok \
	ON gebein.gebaeudeeingang_von = lok.t_id \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisationsname AS lokname \
	ON lokname.benannte = lok.t_id \
	INNER JOIN  \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	ON ST_Intersects(gebein.lage, parcels.geometrie) \
	LEFT JOIN av_plzortschaft.plzortschaft_plz6 AS plz \
	ON ST_Intersects(gebein.lage, plz.flaeche) \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	lokname.atext IS NOT NULL /* Due to errors (?) in the data. */ \
	AND plz.plz = :postalcode \
	AND lokname.atext = :localisation \
	AND gebein.hausnummer = :housing_number \
;
Egrid.getEgridByPostalcodeAndLocalisation=\
SELECT DISTINCT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS "number" \
FROM \
	( \
		SELECT \
			t_id, \
			gebaeudeeingang_von, \
			hausnummer, \
			lage \
		FROM	 \
			av_avdpool_ng.gebaeudeadressen_gebaeudeeingang \
		WHERE \
			hausnummer IS NOT NULL \
			AND \
			istoffiziellebezeichnung = 'ja' \
	) AS gebein \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisation AS lok \
	ON gebein.gebaeudeeingang_von = lok.t_id \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisationsname AS lokname \
	ON lokname.benannte = lok.t_id \
	INNER JOIN  \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	ON ST_Intersects(gebein.lage, parcels.geometrie) \
	LEFT JOIN av_plzortschaft.plzortschaft_plz6 AS plz \
	ON ST_Intersects(gebein.lage, plz.flaeche) \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	lokname.atext IS NOT NULL /* Due to errors (?) in the data. */ \
	AND plz.plz = :postalcode \
	AND lokname.atext = :localisation \
;
RealEstateDPR.findByEgrid=\
SELECT \
	parcel.t_id, \
	g.nummer AS "number", \
	g.nbident AS identdn, \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	CASE \
		WHEN g.art = 'Liegenschaft' THEN 'REAL_ESTATE' \
		WHEN g.art = 'SelbstRecht.Baurecht' THEN 'DISTINCT_AND_PERMANENT_RIGHTS_BUILDING_RIGHT' \
		WHEN g.art = 'SelbstRecht.Baurecht' THEN 'DISTINCT_AND_PERMANENT_RIGHTS_RIGHT_TO_SPRING_WATER' \
		WHEN g.art = 'SelbstRecht.Baurecht' THEN 'DISTINCT_AND_PERMANENT_RIGHTS_CONCESSION' \
		ELSE 'DISTINCT_AND_PERMANENT_RIGHTS_OTHER' \
	END AS "type", \
	'SO' AS canton, \
	gemeinde.aname AS municipality, \
	gemeinde.bfsnr AS fosnr, \
	'http://www.example.com/ist_ja_optional_oder' AS metadata_of_geographical_basedata, \
	parcel.flaechenmass AS land_registry_area \
/* can we use st_asgml?? */ \
FROM \
	( \
		SELECT \
			t_id, \
			nummer, \
			nbident, \
			egris_egrid, \
			art \
		FROM \
			av_avdpool_ng.liegenschaften_grundstueck AS g \
		WHERE egris_egrid = :egrid \
	) AS g \
	LEFT JOIN \
	( \
		SELECT \
			t_id, \
			geometrie AS geometrie, \
			flaechenmass, \
			liegenschaft_von AS grundstueck_fk  \
		FROM  \
			av_avdpool_ng.liegenschaften_liegenschaft  \
		UNION ALL  \
		SELECT  \
			t_id, \
			geometrie AS geometrie,  \
			flaechenmass, \
			selbstrecht_von AS grundstueck_fk  \
		FROM  \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcel \
	ON g.t_id = parcel.grundstueck_fk \
	LEFT JOIN \
	( \
		SELECT \
			gem.bfsnr, \
			gem.aname, \
			gemgre.geometrie \
		FROM \
			av_avdpool_ng.gemeindegrenzen_gemeinde AS gem \
			LEFT JOIN \
			( \
				SELECT \
					gemeindegrenze_von, \
					ST_Multi(ST_Union(geometrie)) AS geometrie \
				FROM \
					av_avdpool_ng.gemeindegrenzen_gemeindegrenze \
				GROUP BY  \
					gemeindegrenze_von \
			) AS gemgre \
			ON gem.t_id = gemgre.gemeindegrenze_von \
	) AS gemeinde \
	ON ST_Intersects(ST_PointOnSurface(parcel.geometrie), gemeinde.geometrie) \
	;
;