Egrid.findByNumberAndIdentdn=\
SELECT \
	egris_egrid AS egrid, \
	CASE \
		WHEN egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE egris_egrid \
	END AS egrid, \
	nbident as identdn, \
	nummer as number \
FROM \
	av_avdpool_ng.liegenschaften_grundstueck \
WHERE \
	nummer = :number \
	AND nbident = :identdn \
; 
Egrid.findByXY=\
SELECT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS number \
FROM \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	ST_Intersects(:point, geometrie) \
;
Egrid.findByGNSS=\
SELECT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS number \
FROM \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	ST_Intersects(ST_Transform(:point, 2056), geometrie) \
;
Egrid.getEgridByPostalcodeAndLocalisationAndHousingNumber=\
SELECT DISTINCT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS "number" \
FROM \
	( \
		SELECT \
			t_id, \
			gebaeudeeingang_von, \
			hausnummer, \
			lage \
		FROM	 \
			av_avdpool_ng.gebaeudeadressen_gebaeudeeingang \
		WHERE \
			hausnummer IS NOT NULL \
			AND \
			istoffiziellebezeichnung = 'ja' \
	) AS gebein \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisation AS lok \
	ON gebein.gebaeudeeingang_von = lok.t_id \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisationsname AS lokname \
	ON lokname.benannte = lok.t_id \
	INNER JOIN  \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	ON ST_Intersects(gebein.lage, parcels.geometrie) \
	LEFT JOIN av_plzortschaft.plzortschaft_plz6 AS plz \
	ON ST_Intersects(gebein.lage, plz.flaeche) \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	lokname.atext IS NOT NULL /* Due to errors (?) in the data. */ \
	AND plz.plz = :postalcode \
	AND lokname.atext = :localisation \
	AND gebein.hausnummer = :housing_number \
;
Egrid.getEgridByPostalcodeAndLocalisation=\
SELECT DISTINCT \
	CASE \
		WHEN g.egris_egrid IS NULL THEN 'CH-DUMMY' \
		ELSE g.egris_egrid \
	END AS egrid, \
	g.nbident AS identdn, \
	g.nummer AS "number" \
FROM \
	( \
		SELECT \
			t_id, \
			gebaeudeeingang_von, \
			hausnummer, \
			lage \
		FROM	 \
			av_avdpool_ng.gebaeudeadressen_gebaeudeeingang \
		WHERE \
			hausnummer IS NOT NULL \
			AND \
			istoffiziellebezeichnung = 'ja' \
	) AS gebein \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisation AS lok \
	ON gebein.gebaeudeeingang_von = lok.t_id \
	LEFT JOIN av_avdpool_ng.gebaeudeadressen_lokalisationsname AS lokname \
	ON lokname.benannte = lok.t_id \
	INNER JOIN  \
	( \
		SELECT \
			geometrie AS geometrie, \
			liegenschaft_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_liegenschaft \
		UNION ALL \
		SELECT \
			geometrie AS geometrie, \
			selbstrecht_von AS grundstueck_fk \
		FROM \
			av_avdpool_ng.liegenschaften_selbstrecht \
	) AS parcels \
	ON ST_Intersects(gebein.lage, parcels.geometrie) \
	LEFT JOIN av_plzortschaft.plzortschaft_plz6 AS plz \
	ON ST_Intersects(gebein.lage, plz.flaeche) \
	LEFT JOIN av_avdpool_ng.liegenschaften_grundstueck AS g \
	ON g.t_id = parcels.grundstueck_fk \
WHERE \
	lokname.atext IS NOT NULL /* Due to errors (?) in the data. */ \
	AND plz.plz = :postalcode \
	AND lokname.atext = :localisation \
;